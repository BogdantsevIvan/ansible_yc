---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Run Terraform init
      command: terraform init
      args:
        chdir: "{{ playbook_dir }}/terraform/"

    - name: Run Terraform apply
      command: terraform apply -auto-approve -var-file="./my-variables.tfvars"
      args:
        chdir: "{{ playbook_dir }}/terraform/"

    - name: Read IP from terraform.tfstate
      command: "terraform output -json"
      register: tf_output
      changed_when: false
      args:
        chdir: "{{ playbook_dir }}/terraform/"
            
    - name: Set dynamic hosts
      add_host:
        name: "vm_1"
        ansible_host: "{{ tf_output.stdout | from_json | json_query('external_ip_address_vm_1.value') }}"
        ansible_ssh_private_key_file: "~/.ssh/id_rsa.pub"
        ansible_user: "my-user"
        groups: dynamic_hosts

- hosts: dynamic_hosts
  gather_facts: false
  become: true
  tasks:
      
    - name: Wait for system to become reachable
      wait_for_connection:
      
    - name: Install unzip
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - unzip
      tags:
        - prerequisites

    - name: Download Packer archive
      shell: "sudo wget https://hashicorp-releases.yandexcloud.net/packer/1.9.4/packer_1.9.4_linux_amd64.zip"

    - name: Unzip packer
      shell: "unzip packer_1.9.4_linux_amd64.zip"

    - name: Move Packer into /bin
      shell: "sudo mv packer /bin"

    - name: Copy packer configs
      copy:
        src: "{{ playbook_dir }}/packer/"
        dest: "/home/my-user/packer/"

    - name: Run Packer  init
      command: packer init config.pkr.hcl
      args:
        chdir: "/home/my-user/packer/"

    - name: Run Packer  build
      command: packer build -var-file="./variables.pkrvars.hcl" -var-file="./secret-variables.pkrvars.hcl" my-greeting-ubuntu.pkr.hcl
      args:
        chdir: "/home/my-user/packer/"

- name: Run Terraform stop
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Run Terraform destroy
      command: terraform destroy -auto-approve -var-file="./my-variables.tfvars"
      args:
        chdir: "{{ playbook_dir }}/terraform/"
